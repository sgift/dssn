smtp {
  host=xxxx
  port=587
  tls=true
  from=xxxx
  user=xxxx
  password=xxxx
  auth = true
}

securesocial {
  jqueryPath=javascripts/jquery-2.1.3.min.js

  # Where to redirect the user if SecureSocial can't figure that out from
  # the request that led the use to the login page
  #
  onLoginGoTo=/

  #
  # Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
  #
  onLogoutGoTo=/

  #
  # Where to redirect the user when he/she starts the signup process.
  # If not set SecureSocial will redirect to the login page
  #
  #onStartSignUpGoTo=/login

  #
  # Where to redirect the user when he/she signs up.
  # If not set SecureSocial will redirect to the login page
  #
  #onSignUpGoTo=/login

  #
  # Where to redirect the user when he starts the password reset process.
  # If not set SecureSocial will redirect to the login page
  #
  #onStartResetPasswordGoTo=/login

  #
  # Where to redirect the user when he resets his/her password.
  # If not set SecureSocial will redirect to the login page
  #
  #onResetPasswordGoTo=/login

  #
  # Where to redirect the user when he changes his/her password.
  # If not set SecureSocial will redirect to the password change page
  #
  #onPasswordChangeGoTo=/password

  #
  # Enable SSL for oauth callback urls, login/signup/password recovery pages and the authenticator cookie
  #
  ssl=false


  #
  # Parameters for the cookie used to track users.
  #
  cookie {
    #
    # The cookie name (defaults to 'id')
    #name=id

    #
    # The path for which the cookie should be sent by the browser (defaults to /)
    #
    #path=/

    #
    # The domain for which the cookie should be sent (it is left empty by default)
    #
    #domain=some_domain

    #
    # If set to true, the cookie is not readable by a client side script (defaults to true).
    #
    #httpOnly=true

    #
    # The amount of time the session id will remain valid since the last request
    #
    idleTimeoutInMinutes=30

    #
    # The amount of time the session id will be valid since the user authenticated.
    # After this the user will need to re-authenticate
    #
    absoluteTimeoutInMinutes=720
  }

  userpass {
    #
    # Enable username support, otherwise SecureSocial will use the emails as user names
    #
    withUserNameSupport=false
    sendWelcomeEmail=true
    enableGravatarSupport=true
    tokenDuration=60
    tokenDeleteInterval=5
    signupSkipLogin=false
  }
}